<?php
// require_once('../../vendor/autoload.php');
use GuzzleHttp\Client;
use GuzzleHttp\Psr7\Request;
use GuzzleHttp\Pool;
use GuzzleHttp\Exception\ClientException;
use Illuminate\Console\Command;
use Psr\Http\Message\ResponseInterface;
use GuzzleHttp\Exception\RequestException;
use GuzzleHttp\Cookie\CookieJar;
require_once 'class.tools.php';

class tm extends tools{

	public function index($s_date,$e_date,$game=null){

		$jar=new CookieJar;
        do{
            $vurl='http://dlw.tmgame999.com/Login/CreateImage';
            $body=$this->bodytool($vurl,$header,'GET',$jar,null);
            
            $vcode = $this->getcaptcha($body,110);
     
            $loginurl='http://dlw.tmgame999.com/Login/UserLogin';

            $header=array(

              "Content-Type: application/json;charset=UTF-8",
              "X-Requested-With: XMLHttpRequest",

            );

            $post=array(

                'userName'=>'boscs01',
                'loginPwd'=>'123qwe',
                'ImgCode' =>$vcode,

            );
            //$post=json_encode($post);
            //print_r($post);exit;
            $login = $this->bodytool($loginurl,$header,'POST',$jar,$post);
            $login = json_decode($login,true);
            //print_r($login);
        }while($login['m'] == '验证码错误！');
      
        
        //print_r($logn['m']);
        
        //print_r($b);exit;
        $reurl='http://dlw.tmgame999.com/User/GetProxyReportList';
        $header2=array(

          'Content-Type'=>'application/json, text/javascript, */*; q=0.01',
          'X-Requested-With'=>'XMLHttpRequest',

        );
        $post2=array(
        	
	        	"checked"     => 1,
	        	"etime"       => $e_date." 23:59:59",
	        	"orderFiled"  => "PLoginName",
	        	"orderType"   => "DESC",
	        	"pageIndex"   => "1",
	        	"pageSize"    => "20000",
	        	"proxyidc"    => "",
	        	"stime"       => $s_date." 00:00:00",
                "timeType"    => "1",
                "playtype"    => "-1",

        );
        $post2['jsoncs']=json_encode($post2);
        $post2=json_encode($post2);
        $report=$this->bodytool($reurl,$header2,'POST',$jar,$post2,'body');
 		$report=json_decode($report,true);
 		$data=json_decode($report['list'],true);
 		foreach ($data['rows'] as $k => $v) {
 			$prefix=$v['PLoginName'];
            preg_match('/bos(.+)/',$prefix,$prefix);
 			$payout=$v['ScoreTotal']+$v['JackpotBetTotal']+$v['JackpotRemTotal'];
 			if($payout!=0){

 				$total[$k]=[

 					'prefix'=>$prefix[1],
 					'payout'=>$payout,
 				];

 			}
 		}

 		return $total;
	}

    public function getcaptcha($img, $value){

        //判斷圖片
        $img=imagecreatefromstring($img);

        for ($y=0;$y<imagesy($img);$y++) {          

            for ($x=0;$x<imagesx($img);$x++) {

                $rgb = imagecolorat($img,$x,$y);
                $r = ($rgb>>16) & 0xFF;
                $g = ($rgb>>8) & 0xFF;
                $b = $rgb & 0xFF;
                if($b < $value ){
                    $im_data[$x][$y] = '*';          
                    //echo'*';

                }
                else{
                    $im_data[$x][$y] = '-';
                    //echo' ';
                }
            }
            //echo "\n";            
        }
        
        //消除躁點
        $noice = 0; 
        for($x = 0; $x < imagesx($img); $x++){
            for($y = 0; $y < imagesy($img); $y++){
                $noice = 0;
                if($im_data[$x][$y] == '*'){
                    
                    $im_data[$x-1][$y-1] == '-' ? $noice++ : null;
                    $im_data[$x][$y-1] == '-' ? $noice++ : null;
                    $im_data[$x+1][$y-1] == '-' ? $noice++ : null;
                    $im_data[$x-1][$y] == '-' ? $noice++ : null;
                    $im_data[$x+1][$y] == '-' ? $noice++ : null;
                    $im_data[$x-1][$y+1] == '-' ? $noice++ : null;
                    $im_data[$x][$y+1] == '-' ? $noice++ : null;
                    $im_data[$x+1][$y+1] == '-' ? $noice++ : null;
                    if($noice > 6){
                        $im_data[$x][$y] = '-';
                    }
                }
                
            }
        }
        // for($y = 0; $y < imagesy($img); $y++){
        //     for($x = 0; $x < imagesx($img); $x++){
            
        //         echo $im_data[$x][$y];
        //     }
        //     echo "\n";
    
        // }
        
        
        

        //判斷數字起始點
        $key_width=9; //數字寬
        $key_heigh=12; //數字長
        $key_n=108; //一個數字的總數

        $w = 0;
        $w_t = 0;
        $k = 1;
        $h_h = 0;

        //判斷數字起始和結束
        for($i=7; $i<imagesx($img)-6; $i++){ //width
            for($j=5; $j<imagesy($img); $j++){ //height
                    if($w_t==0){
                        $word[$k]['width_s'] = $i; //數字開頭位於圖片的寬
                        $word[$k]['width_e'] = $i + $key_width - 1;
                        $w_t = 1;
                        $w = $i;
                    }
                    if($h_h == 0){
                        $h_h = $j;
                    }
                    if($h_h >= $j){
                        $h_h = $j;
                        $word[$k]['heigh_h'] = $h_h;
                        $word[$k]['heigh_l'] = $h_h + ($key_heigh - 1);
                    }
            }
            if($i == ($w+($key_width-1))){
                $w_t = 0;
                $k += 1;
                $h_h = 0;
            }
        }

        for($i = 1; $i <= count($word); $i++){
            $word[$i]['key'] = '';
            for($j = $word[$i]['heigh_h']; $j <= $word[$i]['heigh_l']; $j++){   
                for($k = $word[$i]['width_s']; $k <= $word[$i]['width_e']; $k++){
                    $word[$i]['key'] = $word[$i]['key'].$im_data[$k][$j];
                }
            }
        }
        //print_r($word);


        $key = array(
            '----***----******---**--**--**---**--**---**--**---**--*----**--*----*--**---*----*---**---*****-----*-*----' => '0',
            '---****-----*****---**--**--**---**--**--***--***--**-***---**-**----*--***--***--**--**---*****-----***----' => '0',
            '----***----******---**--***-****-**--**---**--**---**--**---**-***---**--*---***--*---**---**-*------***----' => '0',
            '-----**----***-**---**--**---*----*--**----*--**---**--*----**--*----**--*----*---**--**---****------***----' => '0',
            '----***-----*****---**--*----***--*--**---*---**---**--**---*---*----**-**----*---*----*---*****-----***----' => '0',
            '------*-------**-----*-**----****-----*--*--------*-------**-------**-------**-------*--------*-------**----' => '1',
            '------*-------**-------**----**-**---***-*--------*--------*-------**-------*--------*--------*-------**----' => '1',
            '------**------**-----****----*****---**--*-------**-------**-------***------*-------**------****------**----' => '1',
            '---****----******--***--**---*----*-------**------***----****-----***-----***-----****-----******---******--' => '2',
            '---****----******---**--**-------**-------**-----***------***-------**--*-----*--**---**--******-----***----' => '3',
            '---****----******---**--**-------**-------**-----***------***-------**--------*--**---**---*****-----***----' => '3',
            '-------*------***------***----*****----****----**-**---**--**--**---**--*****-**-********-----**--*----**---' => '4',
            '-------*-------**------*-**----***-----**-*-----*--*----*---*---*---*-*-********-*******----*-**-------*----' => '4',
            '---**-**----*****---**---*---**-------****----******---**---**-------**-------*---*----*---*****------**----' => '5',
            '---*-***---******---**-------**------******----*****---**--***-------**-------*--***-***---*****-------**---' => '5',
            '---*****----***-*---**-------**-------*****-----**-*---**--***--*----**-------**-------*----*****----***----' => '5',
            '---*****---******---**-------**-------**-*----******---**---**-------**--*----*---**--**---******----****---' => '5',
            '---*****----***-*--***-------**-------****-----**-**---**---*--------*--------*--**---**---*****-----***----' => '5',
            '---****-----*****---**--**--*-*------*****----******----*---*---**---**--**---*---**--**---******----****---' => '6',
            '----***----****-*---*---**---**------**-**----******---**---**--**---**---*---*---**--**----**-*------**----' => '6',
            '----***-----*****---**--**---**------******---******---**---*---**---*---*----*---**--**----*****-----**----' => '6',
            '-********-*******--------*------**-------*-------*--------*-------**-------*-------**-------**-------*------' => '7',
            '--**-****-********------*-------**---------------**------***------**------**-------**-------**-------*------' => '7',
            '--*******-********--------------**-------*-------**-------*------***-------*-------**-----------------------' => '7',
            '-***-****-**-*****------**------**------**-------**------***------**-------**------**-------**------***-----' => '7',
            '--******--******---------*-------*------**------**----------------**------**--------*------***-------*------' => '7',
            '-********-********------**------**------**-------**------**-------**-------*--------*-------**-------**-----' => '7',
            '---****----*******---*--**--**---**--*-*--***--*****----*****---**--**--**----**-*----**---*******---****---' => '8',
            '---****----******---**--**--***--***--*---**----****---******---**---**-**----**--*-*-**---******----****---' => '8',
            '---****----******---**--**---**--**---**--**---*****---***-**---**---*---*----*--***---*---***-**----****---' => '8',
            '---****----******---**--**---*---**--***--**----****----**-*----**--***-**----*---*---**---******----***----' => '8',
            '---****----*-****---**--*----*----*---**--*-----**-*----***-*--***-------*---------*--**---******----****---' => '8',
            '-----**----*****----**--**--**---**--**---**--**--***--*******---******------**--**---**---*****----**-*----' => '9',
            '---****----*****----**--**--**---**--**----*--**---**---***-**----***-*-------*---*----*---*****-----***----' => '9',
            '---***-----*****----*---**--***--**--****-**--**----*---******---******------**---*---**---*****-----***----' => '9',
            '---***----******---**---**--**---**--**---**--***--**---******--******-------**--**---*----**-**----****----' => '9',
            '---***-----******--***--**--**---**--**---***-**---**--*******----*****-------**--*---**---***-*-----***----' => '9',
            '---***-----**-**----*---**--**---***-**---*----*---**---*****-----*-***-------*---*----*---*****-----***----' => '9',

        );

        //印出key的數字
        // foreach ($key as $tmpkey => $tmp_val1) {
        //     echo $tmp_val1.PHP_EOL;
        //     $tmp_num = wordwrap($tmpkey,9,"\n",true);
        //     echo $tmp_num.PHP_EOL.PHP_EOL;
        // }

        //比對文字
        $get_captcha='';
        for($i = 1; $i <= count($word); $i++){
            $percent = 0;
            $num = 0;
            foreach($key as $tmp_key1 => $tmp_val1){
                similar_text($word[$i]['key'], $tmp_key1, $tmp_percent);
                if($percent < $tmp_percent){
                    $percent = $tmp_percent;
                    $num = $tmp_val1;
                }
                
            }
            $get_captcha = $get_captcha.$num;
        }
        //echo $get_captcha;
        return $get_captcha;
    }

}
// $x=new tm;
// $x->index('2019-08-02','2019-08-02');